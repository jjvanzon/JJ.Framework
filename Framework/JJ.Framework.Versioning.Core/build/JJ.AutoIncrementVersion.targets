<Project>
  
  <!-- Vars -->
  
  <PropertyGroup>
     <ToolNameJj>JJ AUTO-INCREMENT VERSION</ToolNameJj>
      <MsgInitJj>$(ToolNameJj) INIT</MsgInitJj>
       <MsgXmlJj>$(ToolNameJj) XML</MsgXmlJj>
      <MsgLoadJj>$(ToolNameJj) LOAD</MsgLoadJj>
      <MsgSaveJj>$(ToolNameJj) SAVE</MsgSaveJj>
     <MsgStageJj>$(ToolNameJj) STAGE</MsgStageJj>
    <!--<MsgDeleteJj>$(ToolNameJj) DELETE</MsgDeleteJj>-->
  </PropertyGroup>

  <PropertyGroup>
       <VerNameJj>BuildNum.xml</VerNameJj>
    <ProjectDirJj>$(MSBuildProjectDirectory)</ProjectDirJj>
    <PackageDirJj>$(MSBuildThisFileDirectory)</PackageDirJj>
           <VerJj>$(ProjectDirJj)\..\$(VerNameJj)</VerJj>
     <PropsNameJj>JJ.AutoIncrementVersion.props</PropsNameJj>
         <PropsJj>$(PackageDirJj)\$(PropsNameJj)</PropsJj>
      <DirPropsJj>$(ProjectDirJj)\..\Directory.Build.props</DirPropsJj>
  </PropertyGroup>
    
  <PropertyGroup>
    <DirPropsContentJj>&lt;Project&gt;&lt;Import Project=&quot;$(VerNameJj)&quot; Condition=&quot;'%24(BuildNum)' == '' and Exists('$(VerNameJj)')&quot;/&gt;&lt;/Project&gt;</DirPropsContentJj>
  </PropertyGroup>

  <!-- LOAD ver file. -->
  <Import     Project="$(VerJj)"   Condition="'$(BuildNum)' == '' and Exists('$(VerJj)'   )" />
  <!--<Import Project="$(PropsJj)" Condition="'$(BuildNum)' == '' and Exists('$(PropsJj)' )" />-->
  <PropertyGroup>
    <BuildNum Condition="'$(BuildNum)' == ''">0</BuildNum> <!-- Default 0 -->
    <BuildNum>$([MSBuild]::Add($(BuildNum), 1))</BuildNum> <!-- Increment -->
    <!-- Build new ver content  -->
    <VerContentJj>&lt;Project&gt;&lt;PropertyGroup&gt;&lt;BuildNum&gt;$(BuildNum)&lt;/BuildNum&gt;&lt;/PropertyGroup&gt;&lt;/Project&gt;</VerContentJj>    
  </PropertyGroup>

  <Target Name="JJ_AutoIncrementVersion_Before" BeforeTargets="BeforeBuild">
    <!-- INIT Directory.Build.props with ref to BuildNum.xml for fallback after uninstall. -->
             <Message Condition="!Exists('$(DirPropsJj)')" Text="$(MsgInitJj) => $(DirPropsJj)" Importance="High" />
    <WriteLinesToFile Condition="!Exists('$(DirPropsJj)')" File="$(DirPropsJj)" Lines="$(DirPropsContentJj)" />

    <!-- XML Log -->
    <ReadLinesFromFile File="$(VerJj)" Condition="Exists('$(VerJj)')" >
      <Output TaskParameter="Lines" PropertyName="BuildNumXml" />
    </ReadLinesFromFile>
    <Message Text="$(MsgXmlJj) BuildNum &quot;$(BuildNumXml)&quot; &lt;= $(VerJj)" Importance="High" />

    <ReadLinesFromFile File="$(PropsJj)" Condition="Exists('$(PropsJj)')" >
      <Output TaskParameter="Lines" PropertyName="PropsXml" />
    </ReadLinesFromFile>
    <Message Text="$(MsgXmlJj) .props &quot;$(PropsXml)&quot; &lt;= $(PropsJj)" Importance="High" />

    <!-- LOAD Message -->
    <Message Text="$(MsgLoadJj) $(BuildNum) &lt;= ? $(VerJj) + 1" Importance="High" />
    <Message Text="$(MsgLoadJj) $(BuildNum) &lt;= ? $(PropsJj) + 1" Importance="High" />

    <!-- SAVE updated ver -->
             <Message Text="$(MsgSaveJj) $(BuildNum) => $(VerJj)" Importance="High" />
    <WriteLinesToFile File="$(VerJj)" Overwrite="true" Lines="$(VerContentJj)" />
    
    <!-- STAGE project-bound props file to package bound location, to make BuildNum imported on time, for use in csproj. --> 
             <Message Text="$(MsgStageJj) $(BuildNum) => $(PropsJj)" Importance="High"  />
    <WriteLinesToFile File="$(PropsJj)" Overwrite="true" Lines="$(VerContentJj)" />
  </Target>

  <!--<Target Name="JJAutoIncrementVersion_After" AfterTargets="Build"> 
   --><!-- DELETE BuildNum from package dir, aiming not to trigger dependencies to build again. --><!--
    <Message Condition="Exists('$(PropsJj)')" Text="$(MsgDeleteJj) => $(PropsJj)" Importance="High" />
     <Delete Condition="Exists('$(PropsJj)')" Files="$(PropsJj)" />
  </Target>-->
    
</Project>
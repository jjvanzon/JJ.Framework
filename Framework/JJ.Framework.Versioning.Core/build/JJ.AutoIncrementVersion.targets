<Project>
  
  <!-- Vars -->
  
  <PropertyGroup>
      <ToolTitleJj>JJ-AUTO-INC-VER</ToolTitleJj>
        <MsgInitJj>$(ToolTitleJj) INIT</MsgInitJj>
    <MsgContentlJj>$(ToolTitleJj) CONTENT</MsgContentlJj>
        <MsgLoadJj>$(ToolTitleJj) LOAD</MsgLoadJj>
        <MsgSaveJj>$(ToolTitleJj) SAVE</MsgSaveJj>
       <MsgStageJj>$(ToolTitleJj) STAGE</MsgStageJj>
    <!--<MsgDeleteJj>$(ToolTitleJj) DELETE</MsgDeleteJj>-->
  </PropertyGroup>

  <PropertyGroup>
      <ProjDirJj>$(MSBuildProjectDirectory)</ProjDirJj>
      <PackDirJj>$(MSBuildThisFileDirectory)</PackDirJj>
      <VerNameJj>BuildNum.xml</VerNameJj>
    <PropsNameJj>JJ.AutoIncrementVersion.props</PropsNameJj>
          <VerJj>$(ProjDirJj)\..\$(VerNameJj)</VerJj>
        <PropsJj>$(PackDirJj)\$(PropsNameJj)</PropsJj>
     <DirPropsJj>$(ProjDirJj)\..\Directory.Build.props</DirPropsJj>
  </PropertyGroup>
    
  <PropertyGroup>
    <DirPropsContentJj>&lt;Project&gt;&lt;Import Project=&quot;$(VerNameJj)&quot; Condition=&quot;'%24(BuildNum)' == '' and Exists('$(VerNameJj)')&quot;/&gt;&lt;/Project&gt;</DirPropsContentJj>
  </PropertyGroup>

  <!-- LOAD ver file. -->
  <Import     Project="$(VerJj)"   Condition="'$(BuildNum)' == '' and Exists('$(VerJj)'   )" />
  <!--<Import Project="$(PropsJj)" Condition="'$(BuildNum)' == '' and Exists('$(PropsJj)' )" />-->
  <PropertyGroup>
    <BuildNum Condition="'$(BuildNum)' == ''">0</BuildNum> <!-- Default 0 -->
    <BuildNum>$([MSBuild]::Add($(BuildNum), 1))</BuildNum> <!-- Increment -->
    <!-- Build new ver content  -->
    <VerContentJj>&lt;Project&gt;&lt;PropertyGroup&gt;&lt;BuildNum&gt;$(BuildNum)&lt;/BuildNum&gt;&lt;/PropertyGroup&gt;&lt;/Project&gt;</VerContentJj>    
  </PropertyGroup>

  <Target Name="JJ_AutoIncrementVersion_Before" BeforeTargets="BeforeBuild">
    <!-- INIT Directory.Build.props with ref to BuildNum.xml for fallback after uninstall. -->
             <Message Condition="!Exists('$(DirPropsJj)')" Text="$(MsgInitJj) => &quot;$(DirPropsJj)&quot;" Importance="High" />
    <WriteLinesToFile Condition="!Exists('$(DirPropsJj)')" File="$(DirPropsJj)" Lines="$(DirPropsContentJj)" />

    <!-- CONTENT -->
    <ReadLinesFromFile File="$(VerJj)" 
                       Condition="Exists('$(VerJj)')" >
      <Output TaskParameter="Lines" 
              PropertyName="BuildNumXml" />
    </ReadLinesFromFile>
    
    <Message Text="$(MsgContentlJj) .xml: $(BuildNumXml) &lt;= &quot;$(VerJj)&quot;" Importance="High" />

    <ReadLinesFromFile File="$(PropsJj)" 
                       Condition="Exists('$(PropsJj)')" >
      <Output TaskParameter="Lines" 
              PropertyName="PropsXml" />
    </ReadLinesFromFile>
    
    <Message Text="$(MsgContentlJj) .props: $(PropsXml) &lt;= &quot;$(PropsJj)&quot;" Importance="High" />

    <!-- LOADED -->
    <Message Text="$(MsgLoadJj) $(BuildNum) &lt;= .xml + 1 ?? (&quot;$(VerJj)&quot;)" Importance="High" />
    <Message Text="$(MsgLoadJj) $(BuildNum) &lt;= .props + 1 ?? (&quot;$(PropsJj)&quot;)" Importance="High" />

    <!-- SAVE updated ver -->
             <Message Text="$(MsgSaveJj) $(BuildNum) => &quot;$(VerJj)&quot;" Importance="High" />
    <WriteLinesToFile File="$(VerJj)" Overwrite="true" Lines="$(VerContentJj)" />
    
    <!-- STAGE project-bound props file to package bound location, to make BuildNum imported on time, for use in csproj. --> 
             <Message Text="$(MsgStageJj) $(BuildNum) => &quot;$(PropsJj)&quot;" Importance="High"  />
    <WriteLinesToFile File="$(PropsJj)" Overwrite="true" Lines="$(VerContentJj)" />
  </Target>

  <!--<Target Name="JJAutoIncrementVersion_After" AfterTargets="Build"> 
   --><!-- DELETE BuildNum from package dir, aiming not to trigger dependencies to build again. --><!--
    <Message Condition="Exists('$(PropsJj)')" Text="$(MsgDeleteJj) => $(PropsJj)" Importance="High" />
     <Delete Condition="Exists('$(PropsJj)')" Files="$(PropsJj)" />
  </Target>-->
    
</Project>
<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd">
	<metadata>
		<id>$id$</id>
		<version>$version$</version>
		<title>$title$</title>
		<authors>$author$</authors>
		<owners>$author$</owners>
		<copyright>$copyright$</copyright>
		<description>$description$</description>

		<licenseUrl>https://raw.githubusercontent.com/jjvanzon/JJ.Framework/master/LICENSE.TXT</licenseUrl>
		<projectUrl>https://github.com/jjvanzon/JJ.Framework/tree/master/Framework/Conversion</projectUrl>
		<iconUrl>https://raw.githubusercontent.com/jjvanzon/JJ.Framework/master/jj-icon-64x64-margin4.png</iconUrl>

		<tags>convert conversion parse parsing tryparse decimal double short int long single float int16 int32 int64 enum</tags>

		<summary>
Makes it easier to convert simple types.

* `SimpleTypeConverter.ParseValue`: One method to parse numeric types, their signed and unsigned variations, DateTime, TimeSpan, Guid and Enum types, IntPtr, UIntPtr and their nullable variations. Those often require different types of conversions. This method just takes care of it.
* `SimpleTypeConverter.ConvertValue`: Makes it easier to convert nullables along with non-nullables.
* `DecimalParser`, `DoubleParser`, `Int16Parser`, `Int32Parser`, `Int64Parser`, `SingleParser`: If you want to be more specific in what it is you parse: these classes make it easier to parse nullables.
* `EnumParser`: Make it a little easier to use enum parsing.
		</summary>

		<releaseNotes>
2018-03-07: Uses new JJ.Framework.Exceptions.
		</releaseNotes>

		<dependencies>
			<dependency id="JJ.Framework.Common" version="[1.2,1.3)" />
			<dependency id="JJ.Framework.Reflection" version="[1.2,1.3)" />
		</dependencies>

		<requireLicenseAcceptance>false</requireLicenseAcceptance>
	</metadata>

	<files>
		<file src="README.MD" target="" />
	</files>
</package>
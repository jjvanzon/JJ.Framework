JJ.Framework.Common README outtakes:

It has been updated for modern `.NET` versions and currently under the scrutiny of testing.

-----

Expected <Configuration section of type 'JJ.Framework.Common.Core.Tests.ConfigurationSectionLegacy' was not set. To allow JJ.Framework.Common to use this configuration section, call JJ.Framework.Common.ConfigurationHelper.SetSection.>,
Actual   <Configuration section of type 'JJ.Framework.Common.Core.Tests.ConfigurationSectionLegacy' was not set. To allow JJ.Framework.Common to use this configuration section, call JJ.Framework.Common.ConfigurationHelper.SetSection.>. Tested property: 'ex.Message'.

-----

// TODO: Program test to check that throw statement is hit in ConfigurationHelperCore.TryGetSection upon non-matching exception message.

-----

  <ItemGroup>
    <None Remove="*.ncrunchproject" />
  </ItemGroup>

-----

 Add EmbeddedResourceHelper tests copied from 2021 to the 2015 state, adjusting mostly the names to match.

 -----

         
private static void AssertContains(string[] expectedContainsTexts, string actualText)
{
    foreach (string messageContainsText in expectedContainsTexts)
    {
        AssertContains(actualText, messageContainsText);
    }
}

private static string FormatDoesNotContainMessage(string actualExceptionMessage, string messageContainsText) 
    => $"Message does not contain: '{messageContainsText}'. Full message: '{actualExceptionMessage}'";


-----

Test file patterns in Azure DevOps:

**\$(BuildConfiguration)\*tests*.dll
**\$(BuildConfiguration)\*.demos.*.dll
**\$(BuildConfiguration)\net*.0\*tests*.dll
**\$(BuildConfiguration)\net*.0\*.demos.*.dll
!**\obj\**
!**\$(BuildConfiguration)\JJ.Demos.ReflectionCache.*
!**\$(BuildConfiguration)\net*.0\JJ.Demos.ReflectionCache.*
!**\$(BuildConfiguration)\JJ.Demos.GetNames.dll
!**\$(BuildConfiguration)\net*.0\JJ.Demos.GetNames.dll
!**\$(BuildConfiguration)\net*.0\JJ.Framework.Versioning.Core.Tests.dll

Modified:

**\$(BuildConfiguration)\*.tests.dll
**\$(BuildConfiguration)\*.demos.*.dll
**\$(BuildConfiguration)\net*.0\*.tests.dll
**\$(BuildConfiguration)\net*.0\*.demos.*.dll
!**\obj\**
!**\$(BuildConfiguration)\JJ.Demos.ReflectionCache.*
!**\$(BuildConfiguration)\net*.0\JJ.Demos.ReflectionCache.*
!**\$(BuildConfiguration)\JJ.Demos.GetNames.dll
!**\$(BuildConfiguration)\net*.0\JJ.Demos.GetNames.dll
!**\$(BuildConfiguration)\net*.0\JJ.Framework.Versioning.Core.Tests.dll

-----

    // TODO Test Union overloads that take single items as first or second, and compare its results with the regular Union, that takes 2 collections instead.

    // Test null exceptions for Union, like before with the Except method's test

-----
    
    // TODO: Test Distinct methods from IEnumerableOfTExtensions.cs. Note that it can take multiple delegates, but those delegates have the same return types.
    
    [TestMethod]
    public void IEnumerableOfTExtensions_Distinct_Core_Test()
    {
        int[] input = { 1, 2, 2, 3 };
        {
            int[] expected = { 1, 2, 3 };
            int[] actual   = input.Distinct(x => x).ToArray();
            AreEqual(expected, actual);
        }
    }

    // TODO: Do some testing whether null exceptions go off on that AddRange overload.
